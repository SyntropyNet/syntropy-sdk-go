/*
Syntropy network API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@syntropynet.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syntropy

import (
	"encoding/json"
	"fmt"
)

// AgentFilterAgentStatus the model 'AgentFilterAgentStatus'
type AgentFilterAgentStatus string

// List of AgentFilterAgentStatus
const (
	AGENTFILTERAGENTSTATUS_CONNECTED             AgentFilterAgentStatus = "CONNECTED"
	AGENTFILTERAGENTSTATUS_CONNECTED_WITH_ERRORS AgentFilterAgentStatus = "CONNECTED_WITH_ERRORS"
	AGENTFILTERAGENTSTATUS_DISCONNECTED          AgentFilterAgentStatus = "DISCONNECTED"
)

// All allowed values of AgentFilterAgentStatus enum
var AllowedAgentFilterAgentStatusEnumValues = []AgentFilterAgentStatus{
	"CONNECTED",
	"CONNECTED_WITH_ERRORS",
	"DISCONNECTED",
}

func (v *AgentFilterAgentStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AgentFilterAgentStatus(value)
	for _, existing := range AllowedAgentFilterAgentStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AgentFilterAgentStatus", value)
}

// NewAgentFilterAgentStatusFromValue returns a pointer to a valid AgentFilterAgentStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAgentFilterAgentStatusFromValue(v string) (*AgentFilterAgentStatus, error) {
	ev := AgentFilterAgentStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AgentFilterAgentStatus: valid values are %v", v, AllowedAgentFilterAgentStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AgentFilterAgentStatus) IsValid() bool {
	for _, existing := range AllowedAgentFilterAgentStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AgentFilterAgentStatus value
func (v AgentFilterAgentStatus) Ptr() *AgentFilterAgentStatus {
	return &v
}

type NullableAgentFilterAgentStatus struct {
	value *AgentFilterAgentStatus
	isSet bool
}

func (v NullableAgentFilterAgentStatus) Get() *AgentFilterAgentStatus {
	return v.value
}

func (v *NullableAgentFilterAgentStatus) Set(val *AgentFilterAgentStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentFilterAgentStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentFilterAgentStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentFilterAgentStatus(val *AgentFilterAgentStatus) *NullableAgentFilterAgentStatus {
	return &NullableAgentFilterAgentStatus{value: val, isSet: true}
}

func (v NullableAgentFilterAgentStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentFilterAgentStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
