/*
Syntropy network API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@syntropynet.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syntropy

import (
	"encoding/json"
)

// checks if the AgentProviderNameAndId type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentProviderNameAndId{}

// AgentProviderNameAndId struct for AgentProviderNameAndId
type AgentProviderNameAndId struct {
	AgentProviderName string `json:"agent_provider_name"`
	AgentProviderId   int32  `json:"agent_provider_id"`
}

// NewAgentProviderNameAndId instantiates a new AgentProviderNameAndId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentProviderNameAndId(agentProviderName string, agentProviderId int32) *AgentProviderNameAndId {
	this := AgentProviderNameAndId{}
	this.AgentProviderName = agentProviderName
	this.AgentProviderId = agentProviderId
	return &this
}

// NewAgentProviderNameAndIdWithDefaults instantiates a new AgentProviderNameAndId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentProviderNameAndIdWithDefaults() *AgentProviderNameAndId {
	this := AgentProviderNameAndId{}
	return &this
}

// GetAgentProviderName returns the AgentProviderName field value
func (o *AgentProviderNameAndId) GetAgentProviderName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AgentProviderName
}

// GetAgentProviderNameOk returns a tuple with the AgentProviderName field value
// and a boolean to check if the value has been set.
func (o *AgentProviderNameAndId) GetAgentProviderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AgentProviderName, true
}

// SetAgentProviderName sets field value
func (o *AgentProviderNameAndId) SetAgentProviderName(v string) {
	o.AgentProviderName = v
}

// GetAgentProviderId returns the AgentProviderId field value
func (o *AgentProviderNameAndId) GetAgentProviderId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AgentProviderId
}

// GetAgentProviderIdOk returns a tuple with the AgentProviderId field value
// and a boolean to check if the value has been set.
func (o *AgentProviderNameAndId) GetAgentProviderIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AgentProviderId, true
}

// SetAgentProviderId sets field value
func (o *AgentProviderNameAndId) SetAgentProviderId(v int32) {
	o.AgentProviderId = v
}

func (o AgentProviderNameAndId) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentProviderNameAndId) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["agent_provider_name"] = o.AgentProviderName
	toSerialize["agent_provider_id"] = o.AgentProviderId
	return toSerialize, nil
}

type NullableAgentProviderNameAndId struct {
	value *AgentProviderNameAndId
	isSet bool
}

func (v NullableAgentProviderNameAndId) Get() *AgentProviderNameAndId {
	return v.value
}

func (v *NullableAgentProviderNameAndId) Set(val *AgentProviderNameAndId) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentProviderNameAndId) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentProviderNameAndId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentProviderNameAndId(val *AgentProviderNameAndId) *NullableAgentProviderNameAndId {
	return &NullableAgentProviderNameAndId{value: val, isSet: true}
}

func (v NullableAgentProviderNameAndId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentProviderNameAndId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
