/*
Syntropy network API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@syntropynet.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syntropy

import (
	"encoding/json"
	"fmt"
)

// V1ConnectionCreatedBy the model 'V1ConnectionCreatedBy'
type V1ConnectionCreatedBy string

// List of V1ConnectionCreatedBy
const (
	V1CONNECTIONCREATEDBY_API  V1ConnectionCreatedBy = "API"
	V1CONNECTIONCREATEDBY_RULE V1ConnectionCreatedBy = "RULE"
)

// All allowed values of V1ConnectionCreatedBy enum
var AllowedV1ConnectionCreatedByEnumValues = []V1ConnectionCreatedBy{
	"API",
	"RULE",
}

func (v *V1ConnectionCreatedBy) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := V1ConnectionCreatedBy(value)
	for _, existing := range AllowedV1ConnectionCreatedByEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid V1ConnectionCreatedBy", value)
}

// NewV1ConnectionCreatedByFromValue returns a pointer to a valid V1ConnectionCreatedBy
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewV1ConnectionCreatedByFromValue(v string) (*V1ConnectionCreatedBy, error) {
	ev := V1ConnectionCreatedBy(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for V1ConnectionCreatedBy: valid values are %v", v, AllowedV1ConnectionCreatedByEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v V1ConnectionCreatedBy) IsValid() bool {
	for _, existing := range AllowedV1ConnectionCreatedByEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to V1ConnectionCreatedBy value
func (v V1ConnectionCreatedBy) Ptr() *V1ConnectionCreatedBy {
	return &v
}

type NullableV1ConnectionCreatedBy struct {
	value *V1ConnectionCreatedBy
	isSet bool
}

func (v NullableV1ConnectionCreatedBy) Get() *V1ConnectionCreatedBy {
	return v.value
}

func (v *NullableV1ConnectionCreatedBy) Set(val *V1ConnectionCreatedBy) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ConnectionCreatedBy) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ConnectionCreatedBy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ConnectionCreatedBy(val *V1ConnectionCreatedBy) *NullableV1ConnectionCreatedBy {
	return &NullableV1ConnectionCreatedBy{value: val, isSet: true}
}

func (v NullableV1ConnectionCreatedBy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ConnectionCreatedBy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
