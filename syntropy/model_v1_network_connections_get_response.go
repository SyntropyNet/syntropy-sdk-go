/*
Syntropy network API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@syntropynet.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syntropy

import (
	"encoding/json"
)

// checks if the V1NetworkConnectionsGetResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1NetworkConnectionsGetResponse{}

// V1NetworkConnectionsGetResponse struct for V1NetworkConnectionsGetResponse
type V1NetworkConnectionsGetResponse struct {
	Data []V1Connection `json:"data"`
}

// NewV1NetworkConnectionsGetResponse instantiates a new V1NetworkConnectionsGetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1NetworkConnectionsGetResponse(data []V1Connection) *V1NetworkConnectionsGetResponse {
	this := V1NetworkConnectionsGetResponse{}
	this.Data = data
	return &this
}

// NewV1NetworkConnectionsGetResponseWithDefaults instantiates a new V1NetworkConnectionsGetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1NetworkConnectionsGetResponseWithDefaults() *V1NetworkConnectionsGetResponse {
	this := V1NetworkConnectionsGetResponse{}
	return &this
}

// GetData returns the Data field value
func (o *V1NetworkConnectionsGetResponse) GetData() []V1Connection {
	if o == nil {
		var ret []V1Connection
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *V1NetworkConnectionsGetResponse) GetDataOk() ([]V1Connection, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *V1NetworkConnectionsGetResponse) SetData(v []V1Connection) {
	o.Data = v
}

func (o V1NetworkConnectionsGetResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1NetworkConnectionsGetResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

type NullableV1NetworkConnectionsGetResponse struct {
	value *V1NetworkConnectionsGetResponse
	isSet bool
}

func (v NullableV1NetworkConnectionsGetResponse) Get() *V1NetworkConnectionsGetResponse {
	return v.value
}

func (v *NullableV1NetworkConnectionsGetResponse) Set(val *V1NetworkConnectionsGetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1NetworkConnectionsGetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1NetworkConnectionsGetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1NetworkConnectionsGetResponse(val *V1NetworkConnectionsGetResponse) *NullableV1NetworkConnectionsGetResponse {
	return &NullableV1NetworkConnectionsGetResponse{value: val, isSet: true}
}

func (v NullableV1NetworkConnectionsGetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1NetworkConnectionsGetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
