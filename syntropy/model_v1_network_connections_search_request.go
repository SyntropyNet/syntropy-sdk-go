/*
Syntropy network API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@syntropynet.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syntropy

import (
	"encoding/json"
)

// checks if the V1NetworkConnectionsSearchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1NetworkConnectionsSearchRequest{}

// V1NetworkConnectionsSearchRequest struct for V1NetworkConnectionsSearchRequest
type V1NetworkConnectionsSearchRequest struct {
	Filter *V1ConnectionFilter      `json:"filter,omitempty"`
	Order  []V1ConnectionOrderInner `json:"order,omitempty"`
	// Skip number of items.
	Skip *int32 `json:"skip,omitempty"`
	// Limit returned values count.
	Take *int32 `json:"take,omitempty"`
}

// NewV1NetworkConnectionsSearchRequest instantiates a new V1NetworkConnectionsSearchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1NetworkConnectionsSearchRequest() *V1NetworkConnectionsSearchRequest {
	this := V1NetworkConnectionsSearchRequest{}
	var skip int32 = 0
	this.Skip = &skip
	var take int32 = 20
	this.Take = &take
	return &this
}

// NewV1NetworkConnectionsSearchRequestWithDefaults instantiates a new V1NetworkConnectionsSearchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1NetworkConnectionsSearchRequestWithDefaults() *V1NetworkConnectionsSearchRequest {
	this := V1NetworkConnectionsSearchRequest{}
	var skip int32 = 0
	this.Skip = &skip
	var take int32 = 20
	this.Take = &take
	return &this
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *V1NetworkConnectionsSearchRequest) GetFilter() V1ConnectionFilter {
	if o == nil || isNil(o.Filter) {
		var ret V1ConnectionFilter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1NetworkConnectionsSearchRequest) GetFilterOk() (*V1ConnectionFilter, bool) {
	if o == nil || isNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *V1NetworkConnectionsSearchRequest) HasFilter() bool {
	if o != nil && !isNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given V1ConnectionFilter and assigns it to the Filter field.
func (o *V1NetworkConnectionsSearchRequest) SetFilter(v V1ConnectionFilter) {
	o.Filter = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *V1NetworkConnectionsSearchRequest) GetOrder() []V1ConnectionOrderInner {
	if o == nil || isNil(o.Order) {
		var ret []V1ConnectionOrderInner
		return ret
	}
	return o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1NetworkConnectionsSearchRequest) GetOrderOk() ([]V1ConnectionOrderInner, bool) {
	if o == nil || isNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *V1NetworkConnectionsSearchRequest) HasOrder() bool {
	if o != nil && !isNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given []V1ConnectionOrderInner and assigns it to the Order field.
func (o *V1NetworkConnectionsSearchRequest) SetOrder(v []V1ConnectionOrderInner) {
	o.Order = v
}

// GetSkip returns the Skip field value if set, zero value otherwise.
func (o *V1NetworkConnectionsSearchRequest) GetSkip() int32 {
	if o == nil || isNil(o.Skip) {
		var ret int32
		return ret
	}
	return *o.Skip
}

// GetSkipOk returns a tuple with the Skip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1NetworkConnectionsSearchRequest) GetSkipOk() (*int32, bool) {
	if o == nil || isNil(o.Skip) {
		return nil, false
	}
	return o.Skip, true
}

// HasSkip returns a boolean if a field has been set.
func (o *V1NetworkConnectionsSearchRequest) HasSkip() bool {
	if o != nil && !isNil(o.Skip) {
		return true
	}

	return false
}

// SetSkip gets a reference to the given int32 and assigns it to the Skip field.
func (o *V1NetworkConnectionsSearchRequest) SetSkip(v int32) {
	o.Skip = &v
}

// GetTake returns the Take field value if set, zero value otherwise.
func (o *V1NetworkConnectionsSearchRequest) GetTake() int32 {
	if o == nil || isNil(o.Take) {
		var ret int32
		return ret
	}
	return *o.Take
}

// GetTakeOk returns a tuple with the Take field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1NetworkConnectionsSearchRequest) GetTakeOk() (*int32, bool) {
	if o == nil || isNil(o.Take) {
		return nil, false
	}
	return o.Take, true
}

// HasTake returns a boolean if a field has been set.
func (o *V1NetworkConnectionsSearchRequest) HasTake() bool {
	if o != nil && !isNil(o.Take) {
		return true
	}

	return false
}

// SetTake gets a reference to the given int32 and assigns it to the Take field.
func (o *V1NetworkConnectionsSearchRequest) SetTake(v int32) {
	o.Take = &v
}

func (o V1NetworkConnectionsSearchRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1NetworkConnectionsSearchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !isNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !isNil(o.Skip) {
		toSerialize["skip"] = o.Skip
	}
	if !isNil(o.Take) {
		toSerialize["take"] = o.Take
	}
	return toSerialize, nil
}

type NullableV1NetworkConnectionsSearchRequest struct {
	value *V1NetworkConnectionsSearchRequest
	isSet bool
}

func (v NullableV1NetworkConnectionsSearchRequest) Get() *V1NetworkConnectionsSearchRequest {
	return v.value
}

func (v *NullableV1NetworkConnectionsSearchRequest) Set(val *V1NetworkConnectionsSearchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1NetworkConnectionsSearchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1NetworkConnectionsSearchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1NetworkConnectionsSearchRequest(val *V1NetworkConnectionsSearchRequest) *NullableV1NetworkConnectionsSearchRequest {
	return &NullableV1NetworkConnectionsSearchRequest{value: val, isSet: true}
}

func (v NullableV1NetworkConnectionsSearchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1NetworkConnectionsSearchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
