/*
Syntropy network API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@syntropynet.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syntropy

import (
	"encoding/json"
)

// AgentInterfacesMetadata struct for AgentInterfacesMetadata
type AgentInterfacesMetadata struct {
	PUBLIC *AgentInterfaceMetadata `json:"PUBLIC,omitempty"`
	SDN1   *AgentInterfaceMetadata `json:"SDN1,omitempty"`
	SDN2   *AgentInterfaceMetadata `json:"SDN2,omitempty"`
	SDN3   *AgentInterfaceMetadata `json:"SDN3,omitempty"`
}

// NewAgentInterfacesMetadata instantiates a new AgentInterfacesMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentInterfacesMetadata() *AgentInterfacesMetadata {
	this := AgentInterfacesMetadata{}
	return &this
}

// NewAgentInterfacesMetadataWithDefaults instantiates a new AgentInterfacesMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentInterfacesMetadataWithDefaults() *AgentInterfacesMetadata {
	this := AgentInterfacesMetadata{}
	return &this
}

// GetPUBLIC returns the PUBLIC field value if set, zero value otherwise.
func (o *AgentInterfacesMetadata) GetPUBLIC() AgentInterfaceMetadata {
	if o == nil || o.PUBLIC == nil {
		var ret AgentInterfaceMetadata
		return ret
	}
	return *o.PUBLIC
}

// GetPUBLICOk returns a tuple with the PUBLIC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentInterfacesMetadata) GetPUBLICOk() (*AgentInterfaceMetadata, bool) {
	if o == nil || o.PUBLIC == nil {
		return nil, false
	}
	return o.PUBLIC, true
}

// HasPUBLIC returns a boolean if a field has been set.
func (o *AgentInterfacesMetadata) HasPUBLIC() bool {
	if o != nil && o.PUBLIC != nil {
		return true
	}

	return false
}

// SetPUBLIC gets a reference to the given AgentInterfaceMetadata and assigns it to the PUBLIC field.
func (o *AgentInterfacesMetadata) SetPUBLIC(v AgentInterfaceMetadata) {
	o.PUBLIC = &v
}

// GetSDN1 returns the SDN1 field value if set, zero value otherwise.
func (o *AgentInterfacesMetadata) GetSDN1() AgentInterfaceMetadata {
	if o == nil || o.SDN1 == nil {
		var ret AgentInterfaceMetadata
		return ret
	}
	return *o.SDN1
}

// GetSDN1Ok returns a tuple with the SDN1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentInterfacesMetadata) GetSDN1Ok() (*AgentInterfaceMetadata, bool) {
	if o == nil || o.SDN1 == nil {
		return nil, false
	}
	return o.SDN1, true
}

// HasSDN1 returns a boolean if a field has been set.
func (o *AgentInterfacesMetadata) HasSDN1() bool {
	if o != nil && o.SDN1 != nil {
		return true
	}

	return false
}

// SetSDN1 gets a reference to the given AgentInterfaceMetadata and assigns it to the SDN1 field.
func (o *AgentInterfacesMetadata) SetSDN1(v AgentInterfaceMetadata) {
	o.SDN1 = &v
}

// GetSDN2 returns the SDN2 field value if set, zero value otherwise.
func (o *AgentInterfacesMetadata) GetSDN2() AgentInterfaceMetadata {
	if o == nil || o.SDN2 == nil {
		var ret AgentInterfaceMetadata
		return ret
	}
	return *o.SDN2
}

// GetSDN2Ok returns a tuple with the SDN2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentInterfacesMetadata) GetSDN2Ok() (*AgentInterfaceMetadata, bool) {
	if o == nil || o.SDN2 == nil {
		return nil, false
	}
	return o.SDN2, true
}

// HasSDN2 returns a boolean if a field has been set.
func (o *AgentInterfacesMetadata) HasSDN2() bool {
	if o != nil && o.SDN2 != nil {
		return true
	}

	return false
}

// SetSDN2 gets a reference to the given AgentInterfaceMetadata and assigns it to the SDN2 field.
func (o *AgentInterfacesMetadata) SetSDN2(v AgentInterfaceMetadata) {
	o.SDN2 = &v
}

// GetSDN3 returns the SDN3 field value if set, zero value otherwise.
func (o *AgentInterfacesMetadata) GetSDN3() AgentInterfaceMetadata {
	if o == nil || o.SDN3 == nil {
		var ret AgentInterfaceMetadata
		return ret
	}
	return *o.SDN3
}

// GetSDN3Ok returns a tuple with the SDN3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentInterfacesMetadata) GetSDN3Ok() (*AgentInterfaceMetadata, bool) {
	if o == nil || o.SDN3 == nil {
		return nil, false
	}
	return o.SDN3, true
}

// HasSDN3 returns a boolean if a field has been set.
func (o *AgentInterfacesMetadata) HasSDN3() bool {
	if o != nil && o.SDN3 != nil {
		return true
	}

	return false
}

// SetSDN3 gets a reference to the given AgentInterfaceMetadata and assigns it to the SDN3 field.
func (o *AgentInterfacesMetadata) SetSDN3(v AgentInterfaceMetadata) {
	o.SDN3 = &v
}

func (o AgentInterfacesMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PUBLIC != nil {
		toSerialize["PUBLIC"] = o.PUBLIC
	}
	if o.SDN1 != nil {
		toSerialize["SDN1"] = o.SDN1
	}
	if o.SDN2 != nil {
		toSerialize["SDN2"] = o.SDN2
	}
	if o.SDN3 != nil {
		toSerialize["SDN3"] = o.SDN3
	}
	return json.Marshal(toSerialize)
}

type NullableAgentInterfacesMetadata struct {
	value *AgentInterfacesMetadata
	isSet bool
}

func (v NullableAgentInterfacesMetadata) Get() *AgentInterfacesMetadata {
	return v.value
}

func (v *NullableAgentInterfacesMetadata) Set(val *AgentInterfacesMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentInterfacesMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentInterfacesMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentInterfacesMetadata(val *AgentInterfacesMetadata) *NullableAgentInterfacesMetadata {
	return &NullableAgentInterfacesMetadata{value: val, isSet: true}
}

func (v NullableAgentInterfacesMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentInterfacesMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
